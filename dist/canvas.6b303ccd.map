{"version":3,"sources":["assets\\js\\canvas.js"],"names":["canvas","document","querySelector","c","getContext","width","innerWidth","height","innerHeight","numParticles","minRadius","mouse","x","y","colors","addEventListener","event","clientX","clientY","init","randomIntFromRange","min","max","Math","floor","random","randomColor","length","distance","x1","y1","x2","y2","xDist","yDist","sqrt","pow","Particle","radius","color","radians","PI","velocity","distanceFromCenter","lastMouse","update","lastPoint","cos","sin","draw","prototype","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","particles","i","push","console","log","animate","requestAnimationFrame","fillStyle","fillRect","forEach"],"mappings":"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","file":"canvas.6b303ccd.map","sourceRoot":"..","sourcesContent":["// Initial Setup\nconst canvas = document.querySelector('canvas')\nconst c = canvas.getContext('2d')\n\ncanvas.width = innerWidth\ncanvas.height = innerHeight\n\nconst numParticles = 500;\nconst minRadius = 20;\n// Variables\nconst mouse = {\n    x: innerWidth / 2,\n    y: innerHeight / 2\n}\n\nconst colors = ['#2185C5', '#7ECEFD', '#FFF6E5', '#FF7F66']\n\n// Event Listeners\naddEventListener('mousemove', event => {\n    mouse.x = event.clientX\n    mouse.y = event.clientY\n})\n\naddEventListener('resize', () => {\n    canvas.width = innerWidth\n    canvas.height = innerHeight\n\n    init()\n})\n\n// Utility Functions\nfunction randomIntFromRange(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nfunction randomColor(colors) {\n    return colors[Math.floor(Math.random() * colors.length)]\n}\n\nfunction distance(x1, y1, x2, y2) {\n    const xDist = x2 - x1\n    const yDist = y2 - y1\n\n    return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2))\n}\n\n// particles\nfunction Particle(x, y, radius, color) {\n    this.x = x\n    this.y = y\n    this.radius = radius\n    this.color = color\n    this.radians = randomIntFromRange(0, Math.PI * 2);\n    this.velocity = 0.05;\n    this.distanceFromCenter = randomIntFromRange(50, 100)\n    this.lastMouse = {\n        x: x,\n        y: y\n    }\n\n    //fancy 3d tummble\n\n    // this.distanceFromCenter = {\n    //     x: randomIntFromRange(20, 100),\n    //     y: randomIntFromRange(20, 100)\n    // };\n\n\n    this.update = () => {\n\n        const lastPoint = {\n            x: this.x,\n            y: this.y\n        };\n\n        this.radians += this.velocity;\n\n        //Drag\n        this.lastMouse.x += (mouse.x - this.lastMouse.x) * 0.05;\n        this.lastMouse.y += (mouse.y - this.lastMouse.y) * 0.05;\n\n        //Circular motion\n        this.x = this.lastMouse.x + Math.cos(this.radians) * this.distanceFromCenter;\n        this.y = this.lastMouse.y + Math.sin(this.radians) * this.distanceFromCenter;\n        //chamge sign change rotary directions\n        this.draw(lastPoint)\n\n    }\n}\n\nParticle.prototype.draw = function (lastPoint) {\n\n    c.beginPath()\n    c.strokeStyle = this.color;\n    c.lineWidth = 10;\n    c.moveTo(lastPoint.x, lastPoint.y);\n    c.lineTo(this.x, this.y);\n    c.stroke();\n    c.closePath();\n\n    // c.beginPath()\n    // c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\n    // c.fillStyle = this.color\n    // c.fill()\n    // c.closePath()\n}\n\n// Implementation\nlet particles\n\nfunction init() {\n    particles = []\n\n    for (let i = 0; i < numParticles; i++) {\n        const minRadius = (Math.floor(randomIntFromRange(0, 5)) + 1);\n        particles.push(new Particle(innerWidth / 2,\n            innerHeight / 2,\n            minRadius,\n            randomColor(colors)));\n    }\n    console.log(particles)\n}\n\n// Animation Loop\nfunction animate() {\n    requestAnimationFrame(animate)\n    c.fillStyle = 'rgba(255, 255, 255, .06)'\n    c.fillRect(0, 0, canvas.width, canvas.height)\n\n    //c.fillText('HTML CANVAS BOILERPLATE', mouse.x, mouse.y)\n    particles.forEach(Particle => {\n        Particle.update();\n    });\n}\n\ninit()\nanimate()"]}