{"version":3,"sources":["assets\\js\\port.js"],"names":["sect1","document","querySelector","menu","navlinks","querySelectorAll","socialLinks","options","root","rootMargin","treshold","myobsvr","IntersectionObserver","callback","entries","self","forEach","entry","isIntersecting","style","backgroundColor","link","color","console","log","intersectionRatio","observe","mainNavLinks","addEventListener","e","target","parentNode","classList","add","remove"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAIA,QAAQC,SAASC,aAAT,CAAuB,SAAvB,CAAZ;;AAEA,IAAIC,OAAOF,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAIE,WAAWH,SAASI,gBAAT,CAA0B,sBAA1B,CAAf;AACA,IAAIC,cAAcL,SAASI,gBAAT,CAA0B,aAA1B,CAAlB;;AAEA,IAAIE,UAAU;AACZC,QAAM,IADM;AAEZC,cAAY,OAFA;AAGZC,YAAU;AAHE,CAAd;AAKA,IAAIC,UAAU,IAAIC,oBAAJ,CAAyBC,QAAzB,EAAmCN,OAAnC,CAAd;;AAEA,SAASM,QAAT,CAAkBC,OAAlB,EAA2BC,IAA3B,EAAiC;AAC/BD,UAAQE,OAAR,CAAgB,iBAAS;AACvB,QAAIC,MAAMC,cAAN,IAAwB,CAA5B,EAA+B;AAC7Bf,WAAKgB,KAAL,CAAWC,eAAX,GAA6B,OAA7B;AACAhB,eAASY,OAAT,CAAiB;AAAA,eAASK,KAAKF,KAAL,CAAWG,KAAX,GAAmB,OAA5B;AAAA,OAAjB;AACAhB,kBAAYU,OAAZ,CAAoB;AAAA,eAASK,KAAKF,KAAL,CAAWC,eAAX,GAA6B,OAAtC;AAAA,OAApB;AACAd,kBAAYU,OAAZ,CAAoB;AAAA,eAASK,KAAKF,KAAL,CAAWC,eAAX,GAA6B,OAAtC;AAAA,OAApB;AACD,KALD,MAKO;AACLhB,eAASY,OAAT,CAAiB;AAAA,eAASK,KAAKF,KAAL,CAAWG,KAAX,GAAmB,OAA5B;AAAA,OAAjB;AACAlB,eAASY,OAAT,CAAiB;AAAA,eAASb,KAAKgB,KAAL,CAAWC,eAAX,GAA6B,OAAtC;AAAA,OAAjB;AACAd,kBAAYU,OAAZ,CAAoB;AAAA,eAASK,KAAKF,KAAL,CAAWC,eAAX,GAA6B,OAAtC;AAAA,OAApB;AACD;AACDG,YAAQC,GAAR,qBAA8BP,MAAMQ,iBAApC;AACD,GAZD;AAaD;;AAEDd,QAAQe,OAAR,CAAgB1B,KAAhB;AACA;;AAEA;AACA,IAAI2B,eAAe1B,SAASC,aAAT,CAAuB,cAAvB,CAAnB;;AAEAyB,aAAaC,gBAAb,CAA8B,OAA9B,EAAuC,aAAK;AAC1CD,kBAAgBE,EAAEC,MAAlB,GACIH,aAAaI,UAAb,CAAwBC,SAAxB,CAAkCC,GAAlC,CAAsC,QAAtC,CADJ,GAEIN,aAAaK,SAAb,CAAuBE,MAAvB,CAA8B,QAA9B,CAFJ;AAGD,CAJD;AAKA","file":"port.a891ee85.map","sourceRoot":"..","sourcesContent":["//Intersection observer\r\nvar sect1 = document.querySelector(\"section\");\r\n\r\nvar menu = document.querySelector(\".menu\");\r\nvar navlinks = document.querySelectorAll(\".nav-item:not(.logo)\");\r\nvar socialLinks = document.querySelectorAll(\".nav-item>i\");\r\n\r\nvar options = {\r\n  root: null,\r\n  rootMargin: \"-11px\",\r\n  treshold: 1.0\r\n};\r\nvar myobsvr = new IntersectionObserver(callback, options);\r\n\r\nfunction callback(entries, self) {\r\n  entries.forEach(entry => {\r\n    if (entry.isIntersecting == 0) {\r\n      menu.style.backgroundColor = \"black\";\r\n      navlinks.forEach(link => (link.style.color = \"white\"));\r\n      socialLinks.forEach(link => (link.style.backgroundColor = \"white\"));\r\n      socialLinks.forEach(link => (link.style.backgroundColor = \"white\"));\r\n    } else {\r\n      navlinks.forEach(link => (link.style.color = \"black\"));\r\n      navlinks.forEach(link => (menu.style.backgroundColor = \"white\"));\r\n      socialLinks.forEach(link => (link.style.backgroundColor = \"black\"));\r\n    }\r\n    console.log(`the ratio is : ${entry.intersectionRatio}`);\r\n  });\r\n}\r\n\r\nmyobsvr.observe(sect1);\r\n//End intersection observer\r\n\r\n// Region 1\r\nlet mainNavLinks = document.querySelector(\".summon li a\");\r\n\r\nmainNavLinks.addEventListener(\"click\", e => {\r\n  mainNavLinks == e.target\r\n    ? mainNavLinks.parentNode.classList.add(\"active\")\r\n    : mainNavLinks.classList.remove(\"active\");\r\n});\r\n// End region 1\r\n"]}